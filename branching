### Branch Create/Switch/Merge/Delete ###
# Create a new branch, example, to create a branch called new-branch;
git checkout -b new-branch

# Create a new branch from a commit.
# Example, a commit labeled 3ba638b from the reflog examples below.
git checkout -b new-branch 3ba638b

# To view commits;
git reflog

# Example of what commits look like from reflog;
3ba638b HEAD@{14}: commit: Improved index.html and styles.css. Renamed styles.css to style.css, and then added script.js. Minor change to README.md
f8212a3 HEAD@{15}: pull origin main (start): checkout f8212a345de03439fa69a30633729167fc0debe4
ab3d032 HEAD@{16}: checkout: moving from f8212a345de03439fa69a30633729167fc0debe4 to main
f8212a3 HEAD@{17}: pull origin main: Fast-forward

# Switch from main branch, or whatever branch you're currently on, to new-branch:
git checkout new-branch

# Switching from new-branch, or whatever branch you're currently on, to the main branch:
git checkout main

# Merge commits from branches, for example new-branch to main branch.
# NOTE: To accomplish this example, you first must be on the main branch.
git merge new-branch

# Merge the remote changes into your local branch:
git merge origin/main

# To FORCE Merge the remote changes into your local branch, use the --allow-unrelated-histories option:
git merge --allow-unrelated-histories origin/main

# Delete a branch, example delete the new-branch:
git branch -d new-branch

# Delete a branch forcefully, example delete the new-branch forcefully:
git branch -D new-branch

# If you want to ensure the commit is removed from the repository, you can run:
git reflog expire --expire=now --all
git gc --prune=now
